/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
/* The CSS box-sizing property allows us to include the padding and border in an element's total width and height.
If you set box-sizing: border-box; on an element padding and border are included in the width and height */
}

body{
    font-family: "Lato",sans-serif;
    font-weight: 400;
/* The font-weight property sets how thick or thin characters in text should be displayed. */
    font-size: 16px;
/* The font-size property sets the size of a font. */
    line-height: 1.7;
/* The line-height property specifies the height of a line. == Distance between lines */
    color: #777;
    padding: 30px;
}

.header{
    height: 95vh;
    background-image: linear-gradient(
         to right bottom,
         rgba(126, 213, 111, 0.8),
         rgba(40, 180, 133, 0.8)),
      url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
/* The background-position property sets the starting position of a background image. */
    clip-path: polygon(0 0 , 100% 0, 100% 75vh, 0 100%);
/* The clip-path property in CSS allows you to specify a specific region of an element to display, rather than showing the complete area. */
    position: relative;
}

.logo-box{
    position: absolute;
/* The position property specifies the type of positioning method used for an element (static, relative, absolute, fixed, or sticky). */
    top: 40px;
    left: 40px;
}

.logo{
    height: 35px;
}

.text-box{
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
/* The translate() method moves an element from its current position (according to the parameters given for the X-axis and the Y-axis) */
    text-align: center;
}
.heading-primary{
 color: #ffffff;
 text-transform: uppercase;
 margin-bottom: 60px;
 backface-visibility: hidden;
}

.heading-primary-main{
 display: block;
 font-size: 60px;
 font-weight: 400;
 letter-spacing: 35px;
 animation-name: moveInLeft;
 animation-duration: 1s;
 /* animation-delay: 3s; */
 /* animation-iteration-count: 3; */
 animation-timing-function: ease-out;
}

.heading-primary-sub{
 display: block;
/* Displays an element as a block element (like <p>). It starts on a new line, and takes up the whole width */
 font-size: 20px;
 font-weight: 700;
 letter-spacing: 21px;
 animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft{
    0%{
    opacity: 0;
    transform: translateX(-100px);
    }
    80%{
    transform: translateX(10px);
    }
    100%{
        opacity: 1;
        transform: translateX(0px);
    }
}

@keyframes moveInRight{
    0%{
    opacity: 0;
    transform: translateX(100px);
    }
    80%{
    transform: translateX(-10px);
    }
    100%{
    opacity: 1;
    transform: translateX(0px);
    }
}

.btn:link,
.btn:visited {
/* Note: a:hover MUST come after a:link and a:visited in the CSS definition in order to be effective.
Note: a:active MUST come after a:hover in the CSS definition in order to be effective. */
   text-transform: uppercase;
   text-decoration: none;
/* The text-decoration property specifies the decoration added to text */
   padding: 15px 40px;
   display: inline-block;
/* Displays an element as an inline-level block container. The element itself is formatted as an inline element, but you can apply height and width values */
   border-radius: 100px;
   transition: all .2s;
/* CSS transitions allows you to change property values smoothly (from one value to another), over a given duration. */
}
.btn:hover{
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0,0,0,.2);
}
.btn:active{
    transform: translateY(-1px);
     box-shadow: 0 5px 10px rgba(0,0,0,.2);
/* box-shadow: h-offset v-offset blur spread color */
}
.btn-white{
    background-color: white;
    color: #777;
}