
.btn{
    &:link,
    &:visited {
        /* Note: a:hover MUST come after a:link and a:visited in the CSS definition in order to be effective.
        Note: a:active MUST come after a:hover in the CSS definition in order to be effective. */
        text-transform: uppercase;
        text-decoration: none;
        /* The text-decoration property specifies the decoration added to text */
        padding: 1.5rem 4rem;
        display: inline-block;
        /* Displays an element as an inline-level block container. The element itself is formatted as an inline element, but you can apply height and width values */
        border-radius: 10rem;
        transition: all .2s;
        /* CSS transitions allows you to change property values smoothly (from one value to another), over a given duration. */
        position: relative;
        font-size: $default-font-size;
    }


    &:hover{
        transform: translateY(-3px);
        box-shadow: 0 1rem 2rem rgba($color-black,.2);


        &::after{
            transform: scale(1.5);
            opacity: 0;
        }
    }


    &:active{
        transform: translateY(-1px);
        box-shadow: 0 .5rem 1rem rgba($color-black,.2);
        /* box-shadow: h-offset v-offset blur spread color */
    }


    &--white{
        background-color: $color-white;
        color: $color-grey-dark;


        &::after{
            background-color: $color-white;
        }
    }

    &::after{
        /* The ::after selector inserts something after the content of each selected element(s).
        Use the content property to specify the content to insert. */
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        /* The z-index property specifies the stack order of an element.
        An element with greater stack order is always in front of an element with a lower stack order. */
        transition: all .4s;
        opacity: 0.5;
    }


    &--animated{
    animation : moveInDown 1s ease-out .75s;
    animation-fill-mode: backwards;
    /* The animation-fill-mode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).
    Let the div element get the style values set by the first keyframe before the animation starts (during the animation-delay period) */
    }
}

.btn-text{
    &:link,
    &:visited{
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    transition: all .2s;
    }

    &:hover{
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, .15);
    transform:  translateY(-2px);
    }

    &:active{
    box-shadow: 0 .5rem 1rem rgba($color-black, .15);
    transform:  translateY(0);
    }
}